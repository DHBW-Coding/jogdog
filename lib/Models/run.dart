// Class used for accessing data of runs
class Run {
  Duration duration;
  double avgSpeed;
  double maxDeviation;
  DateTime date;
  DateTime timestampstart;

  // TODO: Change this to be later passed
  List<double> speedattimestamps = [
    7,
    11,
    7,
    9,
    7,
    15,
    13,
    15,
    8,
    11,
    12,
    7,
    14,
    8,
    7,
    7,
    12,
    11,
    11,
    10,
    8,
    8,
    13,
    13,
    10,
    7,
    8,
    15,
    12,
    14,
    9,
    7,
    13,
    10,
    11,
    13,
    11,
    11,
    14,
    9,
    15,
    12,
    7,
    9,
    12,
    9,
    13,
    10,
    8,
    10,
    7,
    10,
    13,
    8,
    15,
    11,
    7,
    8,
    14,
    9,
    13,
    12,
    12,
    7,
    9,
    14,
    9,
    13,
    9,
    8,
    11,
    7,
    11,
    10,
    12,
    9,
    8,
    11,
    15,
    8,
    12,
    12,
    12,
    14,
    10,
    8,
    9,
    8,
    12,
    15,
    15,
    14,
    11,
    10,
    7,
    9,
    7,
    11,
    11,
    12,
    11,
    14,
    13,
    12,
    13,
    14,
    10,
    15,
    12,
    12,
    11,
    13,
    15,
    10,
    13,
    7,
    15,
    11,
    13,
    9,
    10,
    7,
    12,
    10,
    8,
    13,
    10,
    9,
    9,
    12,
    8,
    11,
    14,
    15,
    13,
    13,
    15,
    10,
    8,
    8,
    10,
    14,
    10,
    8,
    11,
    15,
    11,
    11,
    7,
    14,
    7,
    14,
    9,
    12,
    10,
    13,
    12,
    9,
    7,
    12,
    8,
    12,
    8,
    15,
    14,
    10,
    10,
    13,
    11,
    8,
    15,
    15,
    14,
    15,
    8,
    13,
    11,
    11,
    7,
    10,
    8,
    10,
    11,
    15,
    10,
    14,
    13,
    8,
    7,
    11,
    15,
    15,
    15,
    15,
    14,
    13,
    14,
    14,
    8,
    14,
    14,
    11,
    13,
    13,
    15,
    8,
    12,
    13,
    12,
    12,
    8,
    11,
    8,
    7,
    9,
    12,
    12,
    8,
    15,
    15,
    7,
    13,
    9,
    8,
    15,
    7,
    12,
    7,
    15,
    12,
    7,
    13,
    9,
    15,
    14,
    11,
    13,
    9,
    14,
    9,
    10,
    7,
    9,
    12,
    8,
    12,
    14,
    7,
    15,
    10,
    7,
    9,
    13,
    14,
    13,
    9,
    8,
    10,
    9,
    11,
    13,
    8,
    15,
    9,
    9,
    12,
    13,
    9,
    10,
    15,
    9,
    9,
    9,
    14,
    9,
    15,
    14,
    11,
    12,
    10,
    12,
    9,
    7,
    7,
    15,
    9,
    13,
    12,
    7,
    12,
    7,
    7,
    9,
    9,
    15,
    15,
    10,
    8,
    11,
    15,
    10,
    14,
    10,
    7,
    14,
    13,
    7,
    15,
    9,
    15,
    8,
    7,
    10,
    10,
    8,
    11,
    13,
    15,
    10,
    8,
    12,
    7,
    12,
    9,
    11,
    9,
    12,
    11,
    14,
    15,
    8,
    8,
    12,
    9,
    12,
    14,
    14,
    15,
    14,
    10,
    8,
    15,
    10,
    12,
    7,
    7,
    8,
    8,
    13,
    15,
    11,
    10,
    9,
    15,
    15,
    11,
    8,
    14,
    11,
    8,
    11,
    7,
    11,
    12,
    11,
    8,
    13,
    9,
    7,
    15,
    8,
    10,
    13,
    7,
    13,
    8,
    14,
    8,
    9,
    7,
    13,
    9,
    13,
    15,
    9,
    10,
    10,
    11,
    7,
    7,
    13,
    9,
    14,
    13,
    15,
    12,
    9,
    10,
    13,
    13,
    7,
    8,
    8,
    14,
    15,
    11,
    10,
    14,
    14,
    9,
    13,
    10,
    7,
    8,
    14,
    15,
    12,
    14,
    9,
    10,
    9,
    12,
    13,
    9,
    7,
    11,
    15,
    9,
    15,
    7,
    9,
    14,
    12,
    9,
    10,
    9,
    8,
    14,
    15,
    15,
    8,
    7,
    14,
    11,
    9,
    11,
    10,
    13,
    10,
    8,
    10,
    10,
    13,
    8,
    11,
    7,
    13,
    13,
    11,
    12,
    8,
    7,
    10,
    15,
    10,
    10,
    14,
    14,
    8,
    10,
    14,
    13,
    11,
    9,
    10,
    15,
    13,
    12,
    15,
    10,
    10,
    15,
    7,
    11,
    13,
    15,
    8,
    8,
    7,
    8,
    9,
    9,
    12,
    11,
    12,
    14,
    14,
    13,
    12,
    12,
    7,
    11,
    12,
    7,
    15,
    10,
    10,
    14,
    12,
    12,
    7,
    14,
    12,
    13,
    14,
    9,
    8,
    10,
    14,
    7,
    7,
    10,
    12,
    15,
    10,
    7,
    14,
    15,
    12,
    13,
    8,
    7,
    7,
    7,
    9,
    8,
    13,
    15,
    10,
    7,
    10,
    11,
    10,
    11,
    12,
    14,
    11,
    15,
    14,
    7,
    13,
    11,
    13,
    8,
    11,
    13,
    14,
    10,
    9,
    10,
    7,
    7,
    15,
    11,
    12,
    9,
    9,
    13,
    15,
    13,
    14,
    8,
    11,
    13,
    15,
    13,
    10,
    10,
    15,
    7,
    12,
    9,
    14,
    7,
    12,
    10,
    11,
    13,
    10,
    14,
    10,
    7,
    13,
    7,
    7,
    8,
    15,
    9,
    13,
    7,
    15,
    13,
    11,
    15,
    14,
    7,
    14,
    11,
    15,
    14,
    8,
    7,
    15,
    10,
    9,
    11,
    12,
    7,
    13,
    7,
    13,
    10,
    11,
    14,
    10,
    14,
    8,
    8,
    13,
    9,
    7,
    7,
    7,
    13,
    13,
    14,
    8,
    7,
    10,
    13,
    10,
    10,
    15,
    14,
    8,
    8,
    10,
    12,
    11,
    7,
    10,
    9,
    14,
    9,
    12,
    11,
    9,
    10,
    14,
    15,
    10,
    11,
    15,
    13,
    11,
    11,
    12,
    15,
    10,
    13,
    7,
    15,
    14,
    15,
    14,
    13,
    12,
    11,
    14,
    10,
    11,
    14,
    8,
    11,
    8,
    11,
    10,
    15,
    10,
    8,
    11,
    15,
    9,
    8,
    11,
    11,
    9,
    15,
    10,
    10,
    13,
    15,
    15,
    7,
    10,
    9,
    15,
    11,
    10,
    12,
    14,
    9,
    7,
    14,
    12,
    8,
    9,
    7,
    7,
    7,
    8,
    13,
    7,
    9,
    13,
    12,
    10,
    15,
    15,
    10,
    11,
    8,
    15,
    11,
    8,
    12,
    7,
    11,
    13,
    7,
    14,
    10,
    11,
    7,
    10,
    12,
    8,
    10,
    7,
    15,
    13,
    13,
    9,
    7,
    9,
    11,
    12,
    12,
    11,
    12,
    10,
    12,
    8,
    10,
    10,
    11,
    14,
    9,
    14,
    8,
    10,
    8,
    10,
    14,
    10,
    14,
    13,
    13,
    14,
    12,
    10,
    7,
    10,
    8,
    9,
    10,
    13,
    10,
    11,
    12,
    15,
    10,
    9,
    10,
    9,
    8,
    11,
    8,
    8,
    12,
    10,
    11,
    9,
    10,
    11,
    9,
    13,
    11,
    11,
    13,
    10,
    12,
    10,
    10,
    9,
    13,
    15,
    11,
    15,
    15,
    7,
    14,
    15,
    8,
    13,
    12,
    13,
    14,
    11,
    10,
    12,
    14,
    15,
    15,
    11,
    11,
    9,
    10,
    14,
    14,
    12,
    8,
    7,
    9,
    9,
    10,
    8,
    11,
    10,
    9,
    8,
    11,
    13,
    14,
    12,
    14,
    9,
    12,
    7,
    13,
    9,
    7,
    13,
    13,
    15,
    7,
    8,
    15,
    15,
    11,
    11,
    11,
    7,
    10,
    7,
    8,
    15,
    14,
    15,
    13,
    14,
    8,
    10,
    13,
    10,
    12,
    14,
    10,
    8,
    10,
    11,
    14,
    8,
    12,
    8,
    8,
    15,
    9,
    12,
    8,
    8,
    10,
    12,
    9,
    10,
    10,
    12,
    14,
    11,
    12,
    8,
    10,
    12,
    14,
    11,
    10,
    12,
    9,
    8,
    10,
    8,
    11,
    9,
    14,
    15,
    7,
    10,
    9,
    15,
    12,
    13,
    14,
    12,
    10,
    15,
    12,
    8,
    8,
    9,
    11,
    15,
    12,
    10,
    12,
    10,
    15,
    15,
    9,
    12,
    10,
    11,
    14,
    13,
    11,
    11,
    12,
    9,
    10,
    11,
    11,
    11,
    14,
    10,
    11,
    14,
    11,
    10,
    8,
    12,
    11,
    7,
    15,
    10,
    15,
    7,
    8,
    13,
    11,
    12,
    7,
    11,
    11,
    14,
    13,
    15,
    13,
    10,
    15,
    9,
  ];

  Run(this.duration, this.avgSpeed, this.maxDeviation, this.date,
      this.timestampstart);
}
